//@import "lesshat.less";

@webkit: true;
@moz: true;
@opera: true;
@ms: true;
@w3c: true;

.transition(...) {

  @webkit_local: true;
  @moz_local: true;
  @opera_local: true;
  @w3c_local: true;

  @process_webkit: ~`(function(value){value=value||"all 0 ease 0";var prefixedProperties=["background-size","border-radius","border-bottom-left-radius","border-bottom-right-radius","border-top-left-radius","border-top-right-radius","box-shadow","column","transform","filter"],prefix="-webkit-",valueRegex=/(?:\d)(?:ms|s)/gi,numWithoutValue=/(?:\s|^)(\.?\d+\.?\d*)(?![^(]*\)|\w|%)/gi;return/^[^, ]*,/.test(value)&&(value=value.replace(/(?:,)(?![^(]*\))/g,"")),prefixedProperties.forEach(function(property){-1!==value.indexOf(property)&&(value=value.replace(new RegExp(property,"g"),function(match){return prefix+match}))}),valueRegex.test(value)||"0"===value||(value=value.replace(numWithoutValue,function(match){return match+=parseFloat(match,10)>10?"ms":"s"})),value})((function(){var args="@{arguments}";return args=args.replace(/^\[|\]$/g,"")})())`;
  @process_moz: ~`(function(value){value=value||"all 0 ease 0";var prefixedProperties=["background-size","box-shadow","column","transform","filter"],prefix="-moz-",valueRegex=/(?:\d)(?:ms|s)/gi,numWithoutValue=/(?:\s|^)(\.?\d+\.?\d*)(?![^(]*\)|\w|%)/gi;return/^[^, ]*,/.test(value)&&(value=value.replace(/(?:,)(?![^(]*\))/g,"")),prefixedProperties.forEach(function(property){-1!==value.indexOf(property)&&(value=value.replace(new RegExp(property,"g"),function(match){return prefix+match}))}),valueRegex.test(value)||"0"===value||(value=value.replace(numWithoutValue,function(match){return match+=parseFloat(match,10)>10?"ms":"s"})),value})((function(){var args="@{arguments}";return args=args.replace(/^\[|\]$/g,"")})())`;
  @process_opera: ~`(function(value){value=value||"all 0 ease 0";var prefixedProperties=["transform"],prefix="-o-",valueRegex=/(?:\d)(?:ms|s)/gi,numWithoutValue=/(?:\s|^)(\.?\d+\.?\d*)(?![^(]*\)|\w|%)/gi;return/^[^, ]*,/.test(value)&&(value=value.replace(/(?:,)(?![^(]*\))/g,"")),prefixedProperties.forEach(function(property){-1!==value.indexOf(property)&&(value=value.replace(new RegExp(property,"g"),function(match){return prefix+match}))}),valueRegex.test(value)||"0"===value||(value=value.replace(numWithoutValue,function(match){return match+=parseFloat(match,10)>10?"ms":"s"})),value})((function(){var args="@{arguments}";return args=args.replace(/^\[|\]$/g,"")})())`;
  @process: ~`(function(value){value=value||"all 0 ease 0";var prefixes=["-webkit-","-moz-","-o-",""],prefixedProperties=["column","transform","filter"],valueRegex=/(?:\d)(?:ms|s)/gi,numWithoutValue=/(?:\s|^)(\.?\d+\.?\d*)(?![^(]*\)|\w|%)/gi;/^[^, ]*,/.test(value)&&(value=value.replace(/(?:,)(?![^(]*\))/g,""));var subSplit=value.split(/(?:,)(?![^(]*\))/g);return subSplit.forEach(function(css,index){prefixedProperties.forEach(function(property){-1!==css.indexOf(property)&&(subSplit[index]="",prefixes.forEach(function(vendor,i){subSplit[index]+=css.trim().replace(new RegExp(property,"g"),function(match){return vendor+match}),i<prefixes.length-1&&(subSplit[index]+=",")}))})}),value=subSplit.join(","),valueRegex.test(value)||"0"===value||(value=value.replace(numWithoutValue,function(match){return match+=parseFloat(match,10)>10?"ms":"s"})),value})((function(){var args="@{arguments}";return args=args.replace(/^\[|\]$/g,"")})())`;

  .result (@arguments, @signal, @boolean, @local_boolean) when (@boolean = true) and (@local_boolean = true) {
    .inception (@signal, @arguments) when (@signal = 1) and (isstring(@process_webkit)) and not (iscolor(@process_webkit)) and not (isnumber(@process_webkit)) and not (iskeyword(@process_webkit)) and not (isurl(@process_webkit)) and not (ispixel(@process_webkit)) and not (ispercentage(@process_webkit)) and not (isem(@process_webkit)) { -webkit-transition: @process_webkit; }
		.inception (@signal, @arguments) when (@signal = 1) and not (isstring(@process_webkit)) and not (iscolor(@process_webkit)) and not (isnumber(@process_webkit)) and not (iskeyword(@process_webkit)) and not (isurl(@process_webkit)) and not (ispixel(@process_webkit)) and not (ispercentage(@process_webkit)) and not (isem(@process_webkit)) {} 
    .inception (@signal, @arguments) when (@signal = 2) and (isstring(@process_moz)) and not (iscolor(@process_moz)) and not (isnumber(@process_moz)) and not (iskeyword(@process_moz)) and not (isurl(@process_moz)) and not (ispixel(@process_moz)) and not (ispercentage(@process_moz)) and not (isem(@process_moz)) { -moz-transition: @process_moz; }
		.inception (@signal, @arguments) when (@signal = 2) and not (isstring(@process_moz)) and not (iscolor(@process_moz)) and not (isnumber(@process_moz)) and not (iskeyword(@process_moz)) and not (isurl(@process_moz)) and not (ispixel(@process_moz)) and not (ispercentage(@process_moz)) and not (isem(@process_moz)) {} 
    .inception (@signal, @arguments) when (@signal = 3) and (isstring(@process_opera)) and not (iscolor(@process_opera)) and not (isnumber(@process_opera)) and not (iskeyword(@process_opera)) and not (isurl(@process_opera)) and not (ispixel(@process_opera)) and not (ispercentage(@process_opera)) and not (isem(@process_opera)) { -o-transition: @process_opera; }
		.inception (@signal, @arguments) when (@signal = 3) and not (isstring(@process_opera)) and not (iscolor(@process_opera)) and not (isnumber(@process_opera)) and not (iskeyword(@process_opera)) and not (isurl(@process_opera)) and not (ispixel(@process_opera)) and not (ispercentage(@process_opera)) and not (isem(@process_opera)) {} 
    .inception (@signal, @arguments) when (@signal = 4) and (isstring(@process)) and not (iscolor(@process)) and not (isnumber(@process)) and not (iskeyword(@process)) and not (isurl(@process)) and not (ispixel(@process)) and not (ispercentage(@process)) and not (isem(@process)) { transition: @process; }
		.inception (@signal, @arguments) when (@signal = 4) and not (isstring(@process)) and not (iscolor(@process)) and not (isnumber(@process)) and not (iskeyword(@process)) and not (isurl(@process)) and not (ispixel(@process)) and not (ispercentage(@process)) and not (isem(@process)) {} 
    .inception(@signal, @arguments);
  }
  .result (@arguments, @signal, @boolean, @local_boolean) when not (@boolean = true), not (@local_boolean = true) {}

  .result(@arguments, 1, @webkit, @webkit_local);
  .result(@arguments, 2, @moz, @moz_local);
  .result(@arguments, 3, @opera, @opera_local);
  .result(@arguments, 4, @w3c, @w3c_local);

}


div-transition {
 .transition(box-shadow 0.2s linear, color .4s .2s ease);
 //eeee: `(function(){var args="[box-shadow 0.2s linear, color .4s .2s ease]";return args=args.replace(/^\[|\]$/g,"")})()`;
}
